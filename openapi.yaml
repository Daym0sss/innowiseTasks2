openapi: 3.0.0
info:
  title: 'REST API GoRest'
  version: '0.1'
servers:
  -
    url: 'https://gorest.co.in/public/v2/users'
paths:
  /:
    get:
      operationId: getList
      parameters:
        -
          name: access-token
          in: query
          description: 'Authorization token'
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 'List of users with information'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      description: 'create new user'
      operationId: createUser
      parameters:
        -
          name: access-token
          in: query
          description: 'Authorization token'
          required: true
          schema:
            type: string
      requestBody:
        description: 'User information'
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
          dsecription: 'Information about created user'
  '/{id}':
    get:
      operationId: getUserById
      parameters:
        -
          name: access-token
          in: query
          description: 'Authorization token'
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          description: 'User id'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Requested user with its information'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    put:
      description: 'updates existing user'
      operationId: updateUser
      parameters:
        -
          name: access-token
          in: query
          description: 'Authorization token'
          required: true
          schema:
            type: string
        -
          name: id
          in: query
          description: 'User id'
          required: true
          schema:
            type: integer
      requestBody:
        description: 'User information'
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
          dsecription: 'Information about updated user'
    delete:
      operationId: deleteUser
      parameters:
        -
          name: access-token
          in: query
          description: 'Authorization token'
          required: false
          schema:
            type: string
        -
          name: id
          in: query
          description: 'User id'
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: 'User deleted'

  
